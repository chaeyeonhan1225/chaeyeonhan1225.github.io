---
layout: post
title:  "v-model(작성중)"
future: true
date:   2022-02-19 11:32:36 +0530
categories: Vue
---
# v-model 활용하기
vue에서는 `v-model`이라는 디렉티브를 제공해준다. `v-model`을 사용하면 **데이터 양방향 바인딩**을 할 수 있다.
```html
<input v-model="name" />
```
위 코드처럼 input이나 checkbox, radiobox에 `v-model`디렉티브를 추가해 `data` 있는 변수를 넣어주면 input이벤트 또는 select 이벤트가 발생할때마다 `name`에 자동으로 바인딩된다.

위의 코드는 아래와 같다.
```html
<input :value="name" @input="onInput" />
...
mehtods: {
    onInput(e) {
        this.name = e;
    }
}
```
input 컴포넌트에 무언가를 입력하면 input 이벤트가 발생하고, 이 이벤트가 일어날때마다 onInput 메소드가 실행되며, name을 그 변경된 값으로 업데이트 해준다. **v-model**은 이 과정을 축약해준것이다.

> checkbox, radio button는 checked 이벤트가 발생하면 data를 업데이트 해준다.

## modifiers
또한 modifiers도 제공해주고 있어서 요긴하게 활용할 수 있다.
- `lazy`: input 이벤트가 아닌 change 이벤트에서 바인딩한다.
    - 폼에서 포커스를 벗어난 후에 데이터 바인딩을 해준다.
- `trim`: 좌우 공백을 제거해주고 바인딩 해준다.
- `number`: 숫자가 될 수 있는 String 타입의 값일 경우 숫자로 변경해준다. 물론 숫자가 아닌 String이면 그냥 String으로 바인딩해준다.


## 컴포넌트에서의 v-model 활용
`v-model`은 기본적으로 `value`를 사용하고 input 이벤트를 사용하지만 컴포넌트에서 사용할때는 `model` 옵션을 사용하여 변경해줄 수 있다.

예를 들어 자식 컴포넌트인 `NameInput.vue`가 있다.

